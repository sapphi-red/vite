{
  "$schema": "./node_modules/oxlint/configuration_schema.json",
  "plugins": ["typescript", "import"],
  "jsPlugins": ["eslint-plugin-regexp", "eslint-plugin-n"],
  "categories": {
    "correctness": "off"
  },
  "env": {
    "builtin": true,
    "commonjs": true,
    "es2024": true,
    "node": true,
    "shared-node-browser": true
  },
  "ignorePatterns": [
    "packages/create-vite/template-*",
    "**/dist/**",
    "**/fixtures/**",
    "**/playground-temp/**",
    "**/temp/**",
    "**/.vitepress/cache/**",
    "**/*.snap"
  ],
  "rules": {
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-control-regex": "error",
    "no-debugger": ["error"],
    "no-delete-var": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty": [
      "warn",
      {
        "allowEmptyCatch": true
      }
    ],
    "no-empty-character-class": "off",
    "no-empty-pattern": "error",
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-global-assign": "error",
    "no-import-assign": "error",
    "no-invalid-regexp": "off",
    "no-irregular-whitespace": "error",
    "no-loss-of-precision": "error",
    "no-new-native-nonconstructor": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-obj-calls": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-self-assign": "error",
    "no-setter-return": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-this-before-super": "error",
    "no-unexpected-multiline": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unsafe-optional-chaining": "error",
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-unused-vars": [
      "error",
      {
        "args": "all",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_",
        "destructuredArrayIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "ignoreRestSiblings": true
      }
    ],
    "no-useless-backreference": "off",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-with": "error",
    "require-yield": "error",
    "use-isnan": "error",
    "valid-typeof": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "no-array-constructor": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-empty-object-type": [
      "error",
      {
        "allowInterfaces": "with-single-extends"
      }
    ],
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-require-imports": "off",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-function-type": "off",
    "no-unused-expressions": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/consistent-generic-constructors": "error",
    "@typescript-eslint/consistent-indexed-object-style": "error",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "no-empty-function": [
      "error",
      {
        "allow": ["arrowFunctions"]
      }
    ],
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/prefer-for-of": "off",
    "@typescript-eslint/prefer-function-type": "off",

    "eslint-plugin-n/no-exports-assign": "error",
    "eslint-plugin-n/no-unpublished-bin": "error",
    "eslint-plugin-n/no-unsupported-features/es-builtins": "error",
    "eslint-plugin-n/no-unsupported-features/node-builtins": [
      "error",
      {
        // TODO: remove this when we don"t support Node 20 anymore
        "ignores": ["Response", "Request", "fetch"]
      }
    ],
    "eslint-plugin-n/process-exit-as-throw": "error",
    "eslint-plugin-n/hashbang": "error",

    "eqeqeq": [
      "warn",
      "always",
      {
        "null": "never"
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": [
      "error",
      {
        "allowArgumentsExplicitlyTypedAsAny": true
      }
    ],
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "disallowTypeAnnotations": false
      }
    ],
    "import-x/no-duplicates": "error",
    "sort-imports": [
      "error",
      {
        "ignoreDeclarationSort": true
      }
    ],
    "no-misleading-character-class": "error",
    "prefer-regex-literals": "error",
    "eslint-plugin-regexp/confusing-quantifier": "warn",
    "eslint-plugin-regexp/control-character-escape": "error",
    "eslint-plugin-regexp/match-any": "error",
    "eslint-plugin-regexp/negation": "error",
    "eslint-plugin-regexp/no-contradiction-with-assertion": "error",
    "eslint-plugin-regexp/no-dupe-characters-character-class": "error",
    "eslint-plugin-regexp/no-dupe-disjunctions": "error",
    "eslint-plugin-regexp/no-empty-alternative": "warn",
    "eslint-plugin-regexp/no-empty-capturing-group": "error",
    "eslint-plugin-regexp/no-empty-character-class": "error",
    "eslint-plugin-regexp/no-empty-group": "error",
    "eslint-plugin-regexp/no-empty-lookarounds-assertion": "error",
    "eslint-plugin-regexp/no-empty-string-literal": "error",
    "eslint-plugin-regexp/no-escape-backspace": "error",
    "eslint-plugin-regexp/no-extra-lookaround-assertions": "error",
    "eslint-plugin-regexp/no-invalid-regexp": "error",
    "eslint-plugin-regexp/no-invisible-character": "error",
    "eslint-plugin-regexp/no-lazy-ends": "warn",
    "eslint-plugin-regexp/no-legacy-features": "error",
    "eslint-plugin-regexp/no-misleading-capturing-group": "error",
    "eslint-plugin-regexp/no-misleading-unicode-character": "error",
    "eslint-plugin-regexp/no-missing-g-flag": "error",
    "eslint-plugin-regexp/no-non-standard-flag": "error",
    "eslint-plugin-regexp/no-obscure-range": "error",
    "eslint-plugin-regexp/no-optional-assertion": "error",
    "eslint-plugin-regexp/no-potentially-useless-backreference": "warn",
    "eslint-plugin-regexp/no-super-linear-backtracking": "error",
    "eslint-plugin-regexp/no-trivially-nested-assertion": "error",
    "eslint-plugin-regexp/no-trivially-nested-quantifier": "error",
    "eslint-plugin-regexp/no-unused-capturing-group": "error",
    "eslint-plugin-regexp/no-useless-assertions": "error",
    "eslint-plugin-regexp/no-useless-backreference": "error",
    "eslint-plugin-regexp/no-useless-character-class": "error",
    "eslint-plugin-regexp/no-useless-dollar-replacements": "error",
    "eslint-plugin-regexp/no-useless-escape": "error",
    "eslint-plugin-regexp/no-useless-flag": "warn",
    "eslint-plugin-regexp/no-useless-lazy": "error",
    "eslint-plugin-regexp/no-useless-non-capturing-group": "error",
    "eslint-plugin-regexp/no-useless-quantifier": "error",
    "eslint-plugin-regexp/no-useless-range": "error",
    "eslint-plugin-regexp/no-useless-set-operand": "error",
    "eslint-plugin-regexp/no-useless-string-literal": "error",
    "eslint-plugin-regexp/no-useless-two-nums-quantifier": "error",
    "eslint-plugin-regexp/no-zero-quantifier": "error",
    "eslint-plugin-regexp/optimal-lookaround-quantifier": "warn",
    "eslint-plugin-regexp/optimal-quantifier-concatenation": "error",
    "eslint-plugin-regexp/prefer-character-class": "error",
    "eslint-plugin-regexp/prefer-d": "error",
    "eslint-plugin-regexp/prefer-plus-quantifier": "error",
    "eslint-plugin-regexp/prefer-predefined-assertion": "error",
    "eslint-plugin-regexp/prefer-question-quantifier": "error",
    "eslint-plugin-regexp/prefer-range": "error",
    "eslint-plugin-regexp/prefer-set-operation": "error",
    "eslint-plugin-regexp/prefer-star-quantifier": "error",
    "eslint-plugin-regexp/prefer-unicode-codepoint-escapes": "error",
    "eslint-plugin-regexp/prefer-w": "error",
    "eslint-plugin-regexp/simplify-set-operations": "error",
    "eslint-plugin-regexp/sort-flags": "error",
    "eslint-plugin-regexp/strict": "error",
    "eslint-plugin-regexp/prefer-regexp-exec": "error",
    "eslint-plugin-regexp/prefer-regexp-test": "error",
    "eslint-plugin-regexp/use-ignore-case": "off"
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx", "**/*.mts", "**/*.cts"],
      "rules": {
        "no-class-assign": "off",
        "no-const-assign": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-func-assign": "off",
        "no-import-assign": "off",
        "no-new-native-nonconstructor": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-this-before-super": "off",
        "no-unsafe-negation": "off",
        "no-var": "error",
        "no-with": "off",
        "prefer-rest-params": "error",
        "prefer-spread": "error"
      }
    },
    {
      "files": ["**/*.ts", "**/*.tsx", "**/*.mts", "**/*.cts"],
      "rules": {
        "no-class-assign": "off",
        "no-const-assign": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-func-assign": "off",
        "no-import-assign": "off",
        "no-new-native-nonconstructor": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-this-before-super": "off",
        "no-unsafe-negation": "off",
        "no-var": "error",
        "no-with": "off",
        "prefer-rest-params": "error",
        "prefer-spread": "error"
      }
    },
    {
      "files": ["packages/**/*.?([cm])[jt]s?(x)"],
      "rules": {
        "no-restricted-globals": ["error", "require", "__dirname", "__filename"]
      }
    },
    {
      "files": ["packages/vite/src/node/**/*.?([cm])[jt]s?(x)"],
      "rules": {
        "no-console": ["error"]
      }
    },
    {
      "files": ["playground/**/*.?([cm])[jt]s?(x)"],
      "rules": {
        "import-x/no-commonjs": "error"
      }
    },
    {
      "files": ["packages/vite/index.cjs"],
      "rules": {
        "no-restricted-globals": "off"
      }
    },
    {
      "files": [
        "packages/create-vite/template-*/**/*.?([cm])[jt]s?(x)",
        "**/build.config.ts"
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off"
      }
    },
    {
      "files": [
        "playground/**/*.?([cm])[jt]s?(x)",
        "docs/**/*.?([cm])[jt]s?(x)"
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "no-empty": "off",
        "no-constant-condition": "off",
        "no-unused-expressions": "off",
        "no-unused-vars": "off",
        "no-empty-function": "off"
      }
    },
    {
      "files": [
        "playground/tsconfig-jsoeslint-plugin-n/**/*.?([cm])[jt]s?(x)",
        "playground/tsconfig-json-load-error/**/*.?([cm])[jt]s?(x)"
      ],
      "rules": {
        "@typescript-eslint/ban-ts-comment": "off"
      }
    },
    {
      "files": ["**/*.js", "**/*.mjs", "**/*.cjs"],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off"
      }
    },
    {
      "files": ["**/*.d.ts"],
      "rules": {
        "@typescript-eslint/consistent-indexed-object-style": "off",
        "@typescript-eslint/triple-slash-reference": "off"
      }
    },
    {
      "files": ["**/__tests__/**/*.?([cm])[jt]s?(x)"],
      "rules": {
        "no-console": "off",
        "@typescript-eslint/ban-ts-comment": "off"
      }
    }
  ]
}
